name: "enroll_acmeprofile"
description: "enroll_acmeprofileâ€š"
inputs:
  DEPLOYMENT_TYPE:
    description: "Deployment type"
    required: true
    default: "rpm"
  HOSTNAME_SUFFIX:
    description: "Hostname suffix for the domain"
    required: true
    default: "-unknown"

runs:
  using: "composite"
  steps:
  - name: "Sleep for 5s"
    uses: juliangruber/sleep-action@v2.0.3
    with:
      time: 5s

  #- name: "EAB - Test http://acme-srv/directory is accessible"
  #  run: docker run -i --rm --network acme curlimages/curl -f http://acme-srv/directory
  #  shell: bash

  #- name: "EAB - Test if https://acme-srv/directory is accessible"
  #  run: docker run -i --rm --network acme curlimages/curl --insecure -f https://acme-srv/directory
  #  shell: bash

  - name: "Enroll lego with without template"
    run: |
      echo $DOMAIN
      echo "Derived domain: $HOSTNAME_SUFFIX"
      sudo rm -rf lego/*
      # docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme goacme/lego --tls-skip-verify -s https://acme-srv -a --email "lego@example.com" -d lego$HOSTNAME_SUFFIX.$DOMAIN --http run
      # sudo openssl x509 -in lego/certificates/lego.acme.crt -text -noout
    shell: bash
    env:
      HOSTNAME_SUFFIX: ${{ inputs.HOSTNAME_SUFFIX }}



  - name: "Sleep for 5s"
    uses: juliangruber/sleep-action@v2.0.3
    with:
      time: 5s

  - name: "ACME Profile - 02 - Check logs"
    working-directory: examples/Docker/
    run: |
      if [ "$DEPLOYMENT_TYPE" == "container" ]; then
        docker compose logs | grep "unknown"
        sudo truncate -s 0 $(docker inspect --format='{{.LogPath}}' acme2certifier-acme-srv-1)
      elif [ "$DEPLOYMENT_TYPE" == "rpm" ]; then
        docker exec -i acme-srv tail -n 500 /var/log/messages | grep unknown
      fi
    shell: bash
    env:
      DEPLOYMENT_TYPE: ${{ inputs.DEPLOYMENT_TYPE }}

  - name: "ACME Profile - 03 - Enroll lego with am allowed template_name"
    run: |
      sudo rm -rf lego/*
      docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme goacme/lego --tls-skip-verify -s https://acme-srv -a --email "lego@example.com" -d lego.acme --http run --profile profile2
      sudo openssl x509 -in lego/certificates/lego.acme.crt -ext extendedKeyUsage -noout
      sudo openssl x509 -in lego/certificates/lego.acme.crt -issuer --noout
      sudo openssl verify -CAfile cert-2.pem -untrusted cert-1.pem  lego/certificates/lego.acme.crt
    shell: bash

  - name: "Sleep for 5s"
    uses: juliangruber/sleep-action@v2.0.3
    with:
      time: 5s

  - name: "ACME Profile - 03 - Check logs"
    working-directory: examples/Docker/
    run: |
      if [ "$DEPLOYMENT_TYPE" == "container" ]; then
        docker compose logs | grep "profile: profile2"
        sudo truncate -s 0 $(docker inspect --format='{{.LogPath}}' acme2certifier-acme-srv-1)
      elif [ "$DEPLOYMENT_TYPE" == "rpm" ]; then
        docker exec -i acme-srv tail -n 500 /var/log/messages | grep "profile: profile2"
      fi
    shell: bash
    env:
      DEPLOYMENT_TYPE: ${{ inputs.DEPLOYMENT_TYPE }}
