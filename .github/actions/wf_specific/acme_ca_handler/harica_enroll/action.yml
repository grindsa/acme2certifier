name: "enroll_acmeprofile"
description: "enroll_acmeprofileâ€š"
inputs:
  DEPLOYMENT_TYPE:
    description: "Deployment type"
    required: true
    default: "rpm"
  HOSTNAME_SUFFIX:
    description: "Hostname suffix for the domain"
    required: true
    default: "-unknown"
  CERT_TIMEOUT:
    description: "Certificate timeout"
    required: true
    default: "60"

runs:
  using: "composite"
  steps:
  - name: "Sleep for 5s"
    uses: juliangruber/sleep-action@v2.0.3
    with:
      time: 5s

  - name: "EAB - Test http://acme-srv/directory is accessible"
    run: docker run -i --rm --network acme curlimages/curl -f http://acme-srv/directory
    shell: bash

  - name: "EAB - Test if https://acme-srv/directory is accessible"
    run: docker run -i --rm --network acme curlimages/curl --insecure -f https://acme-srv/directory
    shell: bash

  - name: "Enroll lego - might fail"
    continue-on-error: true
    run: |
      docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme goacme/lego --tls-skip-verify -s https://acme-srv -a --email "lego@example.com" -d lego$HOSTNAME_SUFFIX.$DOMAIN --cert.timeout $CERT_TIMEOUT --http run
      # sudo openssl x509 -in lego/certificates/lego.acme.crt -text -noout
    shell: bash
    env:
      HOSTNAME_SUFFIX: ${{ inputs.HOSTNAME_SUFFIX }}
      CERT_TIMEOUT: ${{ inputs.CERT_TIMEOUT }}

  - name: "Sleep for 30s"
    uses: juliangruber/sleep-action@v2.0.3
    with:
      time: 30s

  - name: "Enroll lego"
    run: |
      sudo rm -rf lego/*
      docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme goacme/lego --tls-skip-verify -s https://acme-srv -a --email "lego@example.com" -d lego$HOSTNAME_SUFFIX.$DOMAIN --cert.timeout $CERT_TIMEOUT --http run
      sudo openssl x509 -in lego/certificates/lego$HOSTNAME_SUFFIX.$DOMAIN.crt -text -noout
    shell: bash
    env:
      HOSTNAME_SUFFIX: ${{ inputs.HOSTNAME_SUFFIX }}
      CERT_TIMEOUT: ${{ inputs.CERT_TIMEOUT }}

  - name: "Enroll Certbot"
    run: |
      docker run -i --rm --name certbot$HOSTNAME_SUFFIX --network acme -v $PWD/certbot:/etc/letsencrypt/ certbot/ certbot certonly --manual --preferred-challenges http --server  https://acme-srv\ --email grindsa@foo.bar --agree-tos --no-eff-email --no-verify-ssl -d "certbot$HOSTNAME_SUFFIX.acme.dynamop.de" --issuance-timeout $CERT_TIMEOUT
    shell: bash
    env:
      HOSTNAME_SUFFIX: ${{ inputs.HOSTNAME_SUFFIX }}
      CERT_TIMEOUT: ${{ inputs.CERT_TIMEOUT }}


