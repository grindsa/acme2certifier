name: "ejbca_prep"
description: "ejbca_prep"
inputs:
  RUNNER_IP:
    description: "Runner IP"
    required: true
  WORKING_DIR:
    description: "Working directory"
    required: true
    default: ${{ github.workspace }}
outputs:
  SAEC:
    description: "Superadmin password"
    value: ${{ env.SAEC }}
  CAID:
    description: "CAID of acmeca"
    value: ${{ env.CAID }}

runs:
  using: "composite"
  steps:
  - name: "Prepare Environment"
    working-directory: ${{ inputs.WORKING_DIR }}
    run: |
      mkdir -p data/acme_ca
      sudo chmod -R 777 data/acme_ca
      sudo sh -c "echo '$EJBCA_IP ejbca' >> /etc/hosts"
    env:
      EJBCA_IP: ${{ inputs.RUNNER_IP }}
    shell: bash

  - name: "Instanciate ejbca server"
    run: |
      docker run -id --rm -p 80:8080 -p 443:8443 -e TLS_SETUP_ENABLED=true -v $(pwd)/examples/ejbca:/tmp/data  -v ${{ inputs.WORKING_DIR }}/data:/tmp/store --name "ejbca" -h ejbca keyfactor/ejbca-ce
    shell: bash

  - name: "Sleep for 180s"
    uses: juliangruber/sleep-action@v2.0.3
    with:
      time: 180s

  - name: "Get randmonly generated Superadmin password for ejbca instance"
    run: |
      echo SAEC=$(docker logs ejbca | grep /opt/keyfactor/bin/start.sh | grep Password: | awk -F'Password: ' '{print $2}' | awk -F ' ' '{print $1}') >> $GITHUB_ENV
    shell: bash

  - run: echo "Randmonly generated Superadmin password is ${{ env.SAEC }}"
    shell: bash

  - run: sudo echo  ${{ env.SAEC }} >  ${{ inputs.WORKING_DIR }}/data/passphrase.txt
    shell: bash

  - name: "Configure ejbca"
    run: |
      docker exec -i ejbca bin/ejbca.sh ca getcacert --caname ManagementCA -f /tmp/store/acme_ca/ca_bundle.pem
      docker exec -i ejbca bin/ejbca.sh config protocols enable --name "REST Certificate Management"
      docker exec -i ejbca bin/ejbca.sh config protocols enable --name "REST Certificate Management V2"
      docker exec -i ejbca bin/ejbca.sh ca init acmeca "CN=acmeca" soft foo123 4096 RSA -v 365 --policy 2.5.29.32.0 -s SHA256WithRSA
    shell: bash

  - name: "Get CAID"
    run: |
      echo CAID=$(docker logs ejbca | grep "msg=CA with id" | grep "and name acmeca added" | awk -F'with id ' '{print $2}' | awk -F' and name' '{print $1}') >> $GITHUB_ENV
    shell: bash

  - run: echo "CAID of acmeca is ${{ env.CAID }}"
    shell: bash

  - name: "Create subca"
    run: |
      docker exec -i ejbca bin/ejbca.sh ca init acmesubca "CN=acmesubca" soft foo123 4096 RSA -v 365 --policy 2.5.29.32.0 -s SHA256WithRSA --signedby $CAID
      docker exec -i ejbca bin/ejbca.sh ca importprofiles -d /tmp/data/
    env:
      CAID: ${{ env.CAID }}
    shell: bash

  - name: "Sleep for 10s"
    uses: juliangruber/sleep-action@v2.0.3
    with:
      time: 10s

  - name: "Fetch superadmin certificate and key"
    working-directory: ${{ inputs.WORKING_DIR }}
    run: |
      docker exec -i ejbca bin/ejbca.sh ra setendentitystatus superadmin 10
      docker exec -i ejbca bin/ejbca.sh ra setclearpwd superadmin $SAEC
      docker exec -i ejbca bin/ejbca.sh batch
      docker cp ejbca:/opt/keyfactor/p12/superadmin.p12 data/acme_ca/
    env:
      SAEC: ${{ env.SAEC }}
    shell: bash

  - name: "Test superadmin  certificate and key"
    working-directory: ${{ inputs.WORKING_DIR }}
    run: |
      curl https://127.0.0.1/ejbca/ejbca-rest-api/v1/certificate/status --cert-type P12 --cert data/acme_ca/superadmin.p12:$SAEC --insecure
      curl https://ejbca/ejbca/ejbca-rest-api/v1/certificate/status --cert-type P12 --cert data/acme_ca/superadmin.p12:$SAEC --cacert data/acme_ca/ca_bundle.pem
    env:
      SAEC: ${{ env.SAEC }}
    shell: bash
