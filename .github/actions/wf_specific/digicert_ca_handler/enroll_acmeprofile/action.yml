name: "enroll_eab"
description: "enroll_eab"
inputs:
  DEPLOYMENT_TYPE:
    description: "Deployment type"
    required: true
    default: "rpm"

runs:
  using: "composite"
  steps:
  - name: "Sleep for 5s"
    uses: juliangruber/sleep-action@v2.0.3
    with:
      time: 5s

  - name: "EAB - Test http://acme-srv/directory is accessible"
    run: docker run -i --rm --network acme.dynamop.de curlimages/curl -f http://acme-srv/directory
    shell: bash

  - name: "EAB - Test if https://acme-srv/directory is accessible"
    run: docker run -i --rm --network acme.dynamop.de curlimages/curl --insecure -f https://acme-srv/directory
    shell: bash

  - name: "ACME Profile - 01 - Enroll lego with without template"
    run: |
      sudo rm -rf lego/*
      docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme.dynamop.de goacme/lego -s http://acme-srv -a --email "lego@example.com" --eab --kid keyid_00 --hmac V2VfbmVlZF9hbm90aGVyX3ZlcnkfX2xvbmdfaG1hY190b19jaGVja19lYWJfZm9yX2tleWlkXzAwX2FzX2xlZ29fZW5mb3JjZXNfYW5faG1hY19sb25nZXJfdGhhbl8yNTZfYml0cw -d lego.acme.dynamop.de --http run
      sudo openssl verify -CAfile cert-2.pem -untrusted cert-1.pem  lego/certificates/lego.acme.dynamop.de.crt
      sudo openssl x509 -in lego/certificates/lego.acme.dynamop.de.crt -text -noout
      sudo docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme.dynamop.de goacme/lego -s http://acme-srv -a --email "lego@example.com" --eab --kid keyid_00 --hmac V2VfbmVlZF9hbm90aGVyX3ZlcnkfX2xvbmdfaG1hY190b19jaGVja19lYWJfZm9yX2tleWlkXzAwX2FzX2xlZ29fZW5mb3JjZXNfYW5faG1hY19sb25nZXJfdGhhbl8yNTZfYml0cw -d lego.acme.dynamop.de revoke
    shell: bash

  - name: "ACME Profile - 01 - Clear logs"
    working-directory: examples/Docker/
    run: |
      if [ ${{ inputs.DEPLOYMENT_TYPE }} == "container" ]; then
        sudo truncate -s 0 $(docker inspect --format='{{.LogPath}}' acme2certifier_acme-srv_1)
      fi
    shell: bash

  - name: "ACME Profile - 02 - Enroll lego with a unknown template_name taken from profile"
    id: legofail01
    continue-on-error: true
    run: |
      sudo rm -rf lego/*
      docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme.dynamop.de goacme/lego -s http://acme-srv -a --email "lego@example.com" --eab --kid keyid_00 --hmac V2VfbmVlZF9hbm90aGVyX3ZlcnkfX2xvbmdfaG1hY190b19jaGVja19lYWJfZm9yX2tleWlkXzAwX2FzX2xlZ29fZW5mb3JjZXNfYW5faG1hY19sb25nZXJfdGhhbl8yNTZfYml0cw -d lego.acme.dynamop.de --http run --profile unknown
    shell: bash

  - name: "ACME Profile - 02 - check  result "
    if: steps.legofail01.outcome != 'failure'
    run: |
      echo "legofail outcome is ${{steps.legofail01.outcome }}"
      exit 1
    shell: bash

  - name: "ACME Profile - 02 - Check logs"
    working-directory: examples/Docker/
    run: |
      if [ ${{ inputs.DEPLOYMENT_TYPE }} == "container" ]; then
        docker-compose logs | grep "unknown"
        sudo truncate -s 0 $(docker inspect --format='{{.LogPath}}' acme2certifier_acme-srv_1)
      elif [ ${{ inputs.DEPLOYMENT_TYPE }} == "rpm" ]; then
        docker exec -i acme-srv tail -n 250 /var/log/messages | grep unknown
      fi
    shell: bash

  - name: "ACME Profile - 03 - Enroll lego with am allowed template_name taken from profile"
    run: |
      sudo rm -rf lego/*
      docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme.dynamop.de goacme/lego -s http://acme-srv -a --email "lego@example.com" --eab --kid keyid_00 --hmac V2VfbmVlZF9hbm90aGVyX3ZlcnkfX2xvbmdfaG1hY190b19jaGVja19lYWJfZm9yX2tleWlkXzAwX2FzX2xlZ29fZW5mb3JjZXNfYW5faG1hY19sb25nZXJfdGhhbl8yNTZfYml0cw -d lego.acme.dynamop.de --http run --profile ssl_securesite_pro
      sudo openssl x509 -in lego/certificates/lego.acme.dynamop.de.crt -ext extendedKeyUsage -noout
      sudo openssl x509 -in lego/certificates/lego.acme.dynamop.de.crt -issuer --noout
      sudo openssl verify -CAfile cert-2.pem -untrusted cert-1.pem  lego/certificates/lego.acme.dynamop.de.crt
      sudo docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme.dynamop.de goacme/lego -s http://acme-srv -a --email "lego@example.com" --eab --kid keyid_00 --hmac V2VfbmVlZF9hbm90aGVyX3ZlcnkfX2xvbmdfaG1hY190b19jaGVja19lYWJfZm9yX2tleWlkXzAwX2FzX2xlZ29fZW5mb3JjZXNfYW5faG1hY19sb25nZXJfdGhhbl8yNTZfYml0cw -d lego.acme.dynamop.de revoke
    shell: bash

  - name: "ACME Profile - 03 - Check logs"
    working-directory: examples/Docker/
    run: |
      if [ ${{ inputs.DEPLOYMENT_TYPE }} == "container" ]; then
        docker-compose logs | grep "cert_type: ssl_securesite_pro"
        sudo truncate -s 0 $(docker inspect --format='{{.LogPath}}' acme2certifier_acme-srv_1)
      elif [ ${{ inputs.DEPLOYMENT_TYPE }} == "rpm" ]; then
        docker exec -i acme-srv tail -n 500 /var/log/messages | grep "cert_type: ssl_securesite_pro"
      fi
    shell: bash
