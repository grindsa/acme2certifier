name: "enroll_headerinfo"
description: "enroll_headerinfo"

runs:
  using: "composite"
  steps:
  - name: "Sleep for 5s"
    uses: juliangruber/sleep-action@v2.0.3
    with:
      time: 5s

  - name: "ACME-profile - Test http://acme-srv/directory is accessible"
    run: docker run -i --rm --network acme curlimages/curl -f http://acme-srv/directory
    shell: bash

  - name: "ACME-profile - Test if https://acme-srv/directory is accessible"
    run: docker run -i --rm --network acme curlimages/curl --insecure -f https://acme-srv/directory
    shell: bash

  - name: "ACME-profile - 01 - Enroll lego without template_name"
    run: |
      sudo rm -rf lego/*
      docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme goacme/lego -s http://acme-srv -a --email "lego@example.com" -d lego.acme --http run
      sudo openssl verify -CAfile cert-2.pem -untrusted cert-1.pem  lego/certificates/lego.acme.crt
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -noout
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -ext keyUsage | grep "Digital Signature, Non Repudiation, Key Encipherment, Key Agreement"
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -ext extendedKeyUsage | grep "TLS Web Server Authentication, TLS Web Client Authentication"
    shell: bash

  - name: "ACME-profile - 02 - Enroll lego with template_name template"
    run: |
      sudo rm -rf lego/*
      docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme goacme/lego -s http://acme-srv -a --email "lego@example.com" -d lego.acme --http run --profile template
      sudo openssl verify -CAfile cert-2.pem -untrusted cert-1.pem  lego/certificates/lego.acme.crt
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -noout
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -ext keyUsage | grep "Digital Signature, Non Repudiation"
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -ext extendedKeyUsage | grep "TLS Web Client Authentication, Code Signing"
    shell: bash

  - name: "ACME-profile - 03 - Enroll lego with template_name acme (to fail)"
    id: legoprofilefail01
    continue-on-error: true
    run: |
      sudo rm -rf lego/*
      docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme goacme/lego -s http://acme-srv -a --email "lego@example.com" -d lego.acme --http run --profile unknown
      sudo openssl verify -CAfile cert-2.pem -untrusted cert-1.pem  lego/certificates/lego.acme.crt
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -noout
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -ext keyUsage | grep "Digital Signature, Non Repudiation"
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -ext extendedKeyUsage | grep "TLS Web Client Authentication, Code Signing"
    shell: bash

  - name: "EAB - 03 - check  result "
    if: steps.legoprofilefail01.outcome != 'failure'
    run: |
      echo "acmefail outcome is ${{steps.legoprofilefail01.outcome }}"
      exit 1
    shell: bash

  - name: "Delete acme-sh, letsencypt and lego folders"
    run: |
      sudo rm -rf  lego/*
      sudo rm -rf  acme-sh/*
      sudo rm -rf  certbot/*
    shell: bash
