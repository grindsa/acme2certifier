name: "enroll_w_headerinfo"
description: "enroll_w_headerinfo"
inputs:
  ASA_CA_NAME1:
    description: "ASA CA 1"
    required: true
  ASA_CA_NAME2:
    description: "ASA CA 2"
    required: true
  ASA_PROFILE1:
    description: "ASA Profile 1"
    required: true

runs:
  using: "composite"
  steps:
  - name: "EAB ACME Profiling - Sleep for 10s"
    uses: juliangruber/sleep-action@v2.0.3
    with:
      time: 10s

  - name: "EAB ACME Profiling - Test http://acme-srv/directory is accessible"
    run: docker run -i --rm --network acme curlimages/curl -f http://acme-srv/directory
    shell: bash

  - name: "EAB ACME Profiling - Test if https://acme-srv/directory is accessible"
    run: docker run -i --rm --network acme curlimages/curl --insecure -f https://acme-srv/directory
    shell: bash

  - name: "EAB ACME Profiling - 01 - Enroll lego without profile_name"
    run: |
      sudo rm -rf lego/*
      docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme goacme/lego -s http://acme-srv -a --email "lego@example.com" --eab --kid keyid_00 --hmac V2VfbmVlZF9hbm90aGVyX3ZlcnkfX2xvbmdfaG1hY190b19jaGVja19lYWJfZm9yX2tleWlkXzAwX2FzX2xlZ29fZW5mb3JjZXNfYW5faG1hY19sb25nZXJfdGhhbl8yNTZfYml0cw -k rsa2048 -d lego.acme --http run
      # sudo openssl verify -CAfile cert-2.pem -untrusted cert-1.pem  lego/certificates/lego.acme.crt
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -noout
      sudo openssl x509 -in lego/certificates/lego.acme.crt -issuer --noout | grep -i "${{ inputs.ASA_CA_NAME1 }}"
      sudo openssl x509 -in lego/certificates/lego.acme.crt -ext keyUsage -noout | grep -i "Key Encipherment, Data Encipherment"
    shell: bash

  - name: "EAB ACME Profiling - 02a - Enroll lego with a profile_name NOT included in kid.json (to fail)"
    id: legofail01
    continue-on-error: true
    run: |
      sudo rm -rf lego/*
      docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme goacme/lego -s http://acme-srv -a --email "lego@example.com" --eab --kid keyid_00 --hmac V2VfbmVlZF9hbm90aGVyX3ZlcnkfX2xvbmdfaG1hY190b19jaGVja19lYWJfZm9yX2tleWlkXzAwX2FzX2xlZ29fZW5mb3JjZXNfYW5faG1hY19sb25nZXJfdGhhbl8yNTZfYml0cw -k rsa2048 -d lego.acme --http run --profile unknown
    shell: bash

  - name: "EAB ACME Profiling - 02a - check  result "
    if: steps.legofail01.outcome != 'failure'
    run: |
      echo "legofail outcome is ${{steps.legofail01.outcome }}"
      exit 1
    shell: bash

  - name: "EAB ACME Profiling - 02b - Enroll lego with a profile_name included in kid.json"
    run: |
      sudo rm -rf lego/*
      docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme goacme/lego -s http://acme-srv -a --email "lego@example.com" --eab --kid keyid_00 --hmac V2VfbmVlZF9hbm90aGVyX3ZlcnkfX2xvbmdfaG1hY190b19jaGVja19lYWJfZm9yX2tleWlkXzAwX2FzX2xlZ29fZW5mb3JjZXNfYW5faG1hY19sb25nZXJfdGhhbl8yNTZfYml0cw -k rsa2048 -d lego.acme --http run --profile ${{ inputs.ASA_PROFILE1 }}
      # sudo openssl verify -CAfile cert-2.pem -untrusted cert-1.pem  lego/certificates/lego.acme.crt
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -noout
      sudo openssl x509 -in lego/certificates/lego.acme.crt -issuer --noout | grep -i "${{ inputs.ASA_CA_NAME1 }}"
      sudo openssl x509 -in lego/certificates/lego.acme.crt -ext keyUsage -noout | grep "Digital Signature"
    shell: bash

  - name: "EAB ACME Profiling - 03 - Enroll lego with a profile_name/ca_name taken from kid.json"
    run: |
      sudo rm -rf lego/*
      docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme goacme/lego -s http://acme-srv -a --email "lego@example.com" --eab --kid keyid_01 --hmac YW5vdXRoZXJfdmVyeV9sb25nX2htYWNfZm9yX2tleWlkXzAxX3doaWNoIHdpbGxfYmUgdXNlZF9kdXJpbmcgcmVncmVzc2lvbg  -k rsa2048 -d lego.acme --http run
      # sudo openssl verify -CAfile cert-2.pem -untrusted cert-1.pem  lego/certificates/lego.acme.crt
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -noout
      sudo openssl x509 -in lego/certificates/lego.acme.crt -issuer --noout | grep -i "${{ inputs.ASA_CA_NAME2 }}"
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -ext keyUsage | grep -i "Digital Signature"
    shell: bash

  - name: "EAB ACME Profiling - 04 - Enroll lego with a not allowed fqdn in kid.json (to fail)"
    id: legofail021
    continue-on-error: true
    run: |
      sudo rm -rf lego/*
      docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme goacme/lego -s http://acme-srv -a --email "lego@example.com" --eab --kid keyid_02 --hmac dGhpc19pc19hX3ZlcnlfbG9uZ19obWFjX3RvX21ha2Vfc3VyZV90aGF0X2l0c19tb3JlX3RoYW5fMjU2X2JpdHM -k rsa2048 -d lego.acme --http run
    shell: bash

  - name: "EAB ACME Profiling - 04a - check  result "
    if: steps.legofail021.outcome != 'failure'
    run: |
      echo "legofail outcome is ${{steps.legofail021.outcome }}"
      exit 1
    shell: bash

  - name: "EAB ACME Profiling - 05 - Enroll lego with default values from acme.cfg"
    run: |
      sudo rm -rf lego/*
      docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme goacme/lego -s http://acme-srv -a --email "lego@example.com" --eab --kid keyid_03 --hmac YW5kX2ZpbmFsbHlfdGhlX2xhc3RfaG1hY19rZXlfd2hpY2hfaXNfbG9uZ2VyX3RoYW5fMjU2X2JpdHNfYW5kX3Nob3VsZF93b3Jr -k rsa2048 -d lego.acme --http run
      # sudo openssl verify -CAfile cert-2.pem -untrusted cert-1.pem  lego/certificates/lego.acme.crt
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -noout
      sudo openssl x509 -in lego/certificates/lego.acme.crt -issuer --noout | grep -i "${{ inputs.ASA_CA_NAME1 }}"
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -ext keyUsage | grep "Digital Signature"
    shell: bash

  - name: "EAB ACME Profiling - 06 - Enroll lego with not allowed headerinfo-field (should fail)"
    id: legofail03
    continue-on-error: true
    run: |
      sudo rm -rf lego/*
      docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme goacme/lego -s http://acme-srv -a --email "lego@example.com" --eab --kid keyid_02 --hmac dGhpc19pc19hX3ZlcnlfbG9uZ19obWFjX3RvX21ha2Vfc3VyZV90aGF0X2l0c19tb3JlX3RoYW5fMjU2X2JpdHM -k rsa2048 -d lego.acme --http run --profile unknown
    shell: bash

  - name: "EAB ACME Profiling - 06 - check  result "
    if: steps.legofail03.outcome != 'failure'
    run: |
      echo "legofail outcome is ${{steps.legofail03.outcome }}"
      exit 1
    shell: bash
