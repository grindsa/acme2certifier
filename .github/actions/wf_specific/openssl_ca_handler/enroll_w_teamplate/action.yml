name: "enroll_w_headerinfo"
description: "enroll_w_headerinfo"
inputs:
  ASA_CA_NAME1:
    description: "ASA CA 1"
    required: true
  ASA_CA_NAME2:
    description: "ASA CA 2"
    required: true

runs:
  using: "composite"
  steps:
  - name: "Sleep for 5s"
    uses: juliangruber/sleep-action@v2.0.3
    with:
      time: 5s

  - name: "Test http://acme-srv/directory is accessible"
    run: docker run -i --rm --network acme curlimages/curl -f http://acme-srv/directory
    shell: bash

  - name: "Test if https://acme-srv/directory is accessible"
    run: docker run -i --rm --network acme curlimages/curl --insecure -f https://acme-srv/directory
    shell: bash

  - name: "Enroll acme.sh"
    run: |
      sudo rm -rf acme-sh/*
      docker run --rm -i -v "$(pwd)/acme-sh":/acme.sh --network acme --name=acme-sh neilpang/acme.sh:latest --issue --server http://acme-srv --accountemail 'acme-sh@example.com' -d acme-sh.acme --alpn --standalone --debug 3 --output-insecure --force
      awk 'BEGIN {c=0;} /BEGIN CERT/{c++} { print > "cert-" c ".pem"}' < acme-sh/acme-sh.acme_ecc/ca.cer
      # verify aborts due to unhandled critical extension
      openssl x509 -in acme-sh/acme-sh.acme_ecc/acme-sh.acme.cer -text -noout
      openssl x509 -in acme-sh/acme-sh.acme_ecc/acme-sh.acme.cer -text -noout | grep "Basic Constraints: critical"
      openssl x509 -in acme-sh/acme-sh.acme_ecc/acme-sh.acme.cer -text -noout | grep "Digital Signature, Non Repudiation, Key Encipherment, Key Agreement"
      openssl x509 -in acme-sh/acme-sh.acme_ecc/acme-sh.acme.cer -text -noout | grep "TLS Web Server Authentication, OCSP Signing"
    shell: bash

  - name: "Revoke via acme.sh"
    run: |
      docker run --rm -i -v "$(pwd)/acme-sh":/acme.sh --network acme --name=acme-sh neilpang/acme.sh:latest --revoke --server http://acme-srv -d acme-sh.acme --standalone --debug 3 --output-insecure
    shell: bash

  - name: "Register certbot"
    run: |
      sudo rm -rf certbot/*
      docker run -i --rm --name certbot --network acme -v $PWD/certbot:/etc/letsencrypt/ certbot/certbot register --agree-tos -m 'certbot@example.com' --server http://acme-srv --no-eff-email
    shell: bash

  - name: "Enroll certbot"
    run: |
      docker run -i --rm --name certbot --network acme -v $PWD/certbot:/etc/letsencrypt/ certbot/certbot certonly --server http://acme-srv --standalone --preferred-challenges http -d certbot.acme --cert-name certbot
      # verify aborts due to unhandled critical extension
      sudo openssl x509 -in certbot/archive/certbot/cert1.pem -text -noout
      sudo openssl x509 -in certbot/archive/certbot/cert1.pem -text -noout | grep "Basic Constraints: critical"
      sudo openssl x509 -in certbot/archive/certbot/cert1.pem -text -noout | grep "Digital Signature, Non Repudiation, Key Encipherment, Key Agreement"
      sudo openssl x509 -in certbot/archive/certbot/cert1.pem -text -noout | grep "TLS Web Server Authentication, OCSP Signing"
    shell: bash

  - name: "Revoke certbot"
    run: |
      docker run -i --rm --name certbot --network acme -v $PWD/certbot:/etc/letsencrypt/ certbot/certbot revoke --delete-after-revoke --server http://acme-srv  -d certbot.acme --cert-name certbot
    shell: bash

  - name: "Enroll lego"
    run: |
      docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme goacme/lego -s http://acme-srv -a --email "lego@example.com" -d lego.acme --http run
      # verify aborts due to unhandled critical extension
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -noout
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -noout | grep "Basic Constraints: critical"
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -noout | grep "Digital Signature, Non Repudiation, Key Encipherment, Key Agreement"
      sudo openssl x509 -in lego/certificates/lego.acme.crt -text -noout | grep "TLS Web Server Authentication, OCSP Signing"
    shell: bash

  - name: "Revoke lego"
    run: |
      docker run -i -v $PWD/lego:/.lego/ --rm --name lego --network acme goacme/lego -s http://acme-srv -a --email "lego@example.com" -d lego.acme revoke
    shell: bash
