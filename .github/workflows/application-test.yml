name: Application Tests

on:
  push:
  pull_request:
    branches: [ devel ]

jobs:
  docker-compose_wsgi:
    name: "Docker compose - wsgi"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      if: (${{ github.event }} == "push")
        env:
          build_branch: ${{ github.head_ref }}
      if: (${{ github.event }} == "pull_request")
        env:
          build_branch: ${GITHUB_REF##*/}
    - name: "Build the stack"
      working-directory: examples/Docker/
      run: |
        sed -i "s/master/${build_branch}/g" .env
        sed -i "s/grindsa/${{ github.repository_owner }}/g" ./wsgi/Dockerfile
        cat .env
        docker network create acme
        docker-compose up -d
        docker-compose logs
    - name: "Test http://acme-srv/directory is accessable"
      run: docker run -i --rm --network acme curlimages/curl -f http://acme-srv/directory
  docker-compose_django:
    name: "Docker compose - Django"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "Build the stack"
      working-directory: examples/Docker/
      run: |
        sed -i "s/master/${GITHUB_REF##*/}/g" .env
        sed -i "s/wsgi/django/g" .env
        sed -i "s/grindsa/${{ github.repository_owner }}/g" ./django/Dockerfile
        docker network create acme
        docker-compose up -d
        docker-compose logs
    - name: "Test http://acme-srv/directory is accessable"
      run: docker run -i --rm --network acme curlimages/curl -f http://acme-srv/directory
  acme_sh:
    name: "acme.sh"
    needs: [docker-compose_wsgi]
    runs-on: ubuntu-latest
    continue-on-error: false
    strategy:
      matrix:
        accountkeylength: [2048, ec-256]
        keylength: [2048, 3072, 4096, ec-521]
    steps:
    - name: "checkout GIT"
      uses: actions/checkout@v2
    - name: "[ PREPARE ] Build docker-compose (wsgi)"
      working-directory: examples/Docker/
      run: |
        sed -i "s/master/${GITHUB_REF##*/}/g" .env
        sed -i "s/grindsa/${{ github.repository_owner }}/g" ./wsgi/Dockerfile
        docker network create acme
        docker-compose up -d
        docker-compose logs
    - name: "[ PREPARE ] setup openssl ca_handler"
      run: |
        sudo cp examples/ca_handler/openssl_ca_handler.py examples/Docker/data/ca_handler.py
        sudo mkdir -p examples/Docker/data/acme_ca/certs
        sudo cp test/ca/sub-ca-key.pem test/ca/sub-ca-crl.pem test/ca/sub-ca-cert.pem test/ca/root-ca-cert.pem examples/Docker/data/acme_ca/
        sudo cp .github/openssl_ca_handler.py_acme_srv.cfg examples/Docker/data/acme_srv.cfg
        cd examples/Docker/
        docker-compose restart
        docker-compose logs
    - name: "[ PREPARE ] prepare acme.sh container"
      run: |
        docker run --rm -id -v "$(pwd)/acme-sh":/acme.sh -v $(pwd)/.github/dnsserver_container/dnsmasq.new:/dnsmasq.new:rw -v $(pwd)/.github/dnsserver_container/dns_acme2certifier.sh:/root/.acme.sh/dnsapi/dns_acme2certifier.sh --network acme --name=acme-sh neilpang/acme.sh daemon
    - name: "register using acme.sh account key length: ${{ matrix.accountkeylength }}"
      run: |
        docker exec -i acme-sh acme.sh --server http://acme-srv --register-account --accountkeylength ${{ matrix.accountkeylength }} --accountemail 'acme-sh@example.com' --debug 2 --output-insecure
    - name: "prev. step failed ... collecting details"
      working-directory: examples/Docker/
      if: ${{ failure() }}
      run: |
        docker logs acme-sh
        docker-compose logs
    - name: "[HTTP-01] enroll cert single DNS with key: ${{ matrix.keylength }} - acc. key: ${{ matrix.accountkeylength }}"
      run: |
        docker exec -i acme-sh acme.sh --server http://acme-srv --keylength ${{ matrix.keylength }} --issue -d acme-sh.acme --standalone --debug 2 --output-insecure
        if ([ "${{ matrix.keylength }}" == "ec-256" ] || [ "${{ matrix.keylength }}" == "ec-384" ] || [ "${{ matrix.keylength }}" == "ec-521" ]) ; then
          ECC="_ecc"
        fi
        openssl verify -CAfile examples/Docker/data/acme_ca/root-ca-cert.pem -untrusted examples/Docker/data/acme_ca/sub-ca-cert.pem acme-sh/acme-sh.acme${ECC}/acme-sh.acme.cer
    - name: "[HTTP-01] prev. step failed ... collecting details"
      working-directory: examples/Docker/
      if: ${{ failure() }}
      run: |
        if ([ "${{ matrix.keylength }}" == "ec-256" ] || [ "${{ matrix.keylength }}" == "ec-384" ] || [ "${{ matrix.keylength }}" == "ec-521" ]) ; then
          ECC="_ecc"
        fi
        docker logs acme-sh
        docker-compose logs
        echo "acme issued cert..."
        openssl x509 -text -in acme-sh/acme-sh.acme${ECC}/acme-sh.acme.cer
        echo "acme sub-ca-cert"
        openssl x509 -text -in examples/Docker/data/acme_ca/sub-ca-cert.pem
        echo "acme root-ca"
        openssl x509 -text -in examples/Docker/data/acme_ca/sub-ca-cert.pem
    - name: "[HTTP-01] revoke cert single DNS with key: ${{ matrix.keylength }} - acc. key: ${{ matrix.accountkeylength }}"
      run: |
        if ([ "${{ matrix.keylength }}" == "ec-256" ] || [ "${{ matrix.keylength }}" == "ec-384" ] || [ "${{ matrix.keylength }}" == "ec-521" ]) ; then
          ECC="--ecc"
        fi
        docker exec -i acme-sh acme.sh --server http://acme-srv --revoke ${ECC} -d acme-sh.acme --standalone --debug 2 --output-insecure
    - name: "[HTTP-01] prev. step failed ... collecting details"
      working-directory: examples/Docker/
      if: ${{ failure() }}
      run: |
        if ([ "${{ matrix.keylength }}" == "ec-256" ] || [ "${{ matrix.keylength }}" == "ec-384" ] || [ "${{ matrix.keylength }}" == "ec-521" ]) ; then
          ECC="_ecc"
        fi
        docker logs acme-sh
        docker-compose logs
        echo "acme issued cert..."
        openssl x509 -text -in acme-sh/acme-sh.acme${ECC}/acme-sh.acme.cer
        echo "acme sub-ca-cert"
        openssl x509 -text -in examples/Docker/data/acme_ca/sub-ca-cert.pem
        echo "acme root-ca"
        openssl x509 -text -in examples/Docker/data/acme_ca/sub-ca-cert.pem
    - name: "[HTTP-01] enroll cert multiple DNS with key: ${{ matrix.keylength }} - acc. key: ${{ matrix.accountkeylength }}"
      run: |
        docker exec -i acme-sh acme.sh --server http://acme-srv --keylength ${{ matrix.keylength }} --issue -d acme-sh.acme -d acme-sh --standalone --debug 2 --output-insecure
        if ([ "${{ matrix.keylength }}" == "ec-256" ] || [ "${{ matrix.keylength }}" == "ec-384" ] || [ "${{ matrix.keylength }}" == "ec-521" ]) ; then
          ECC="_ecc"
        fi
        openssl verify -CAfile examples/Docker/data/acme_ca/root-ca-cert.pem -untrusted examples/Docker/data/acme_ca/sub-ca-cert.pem acme-sh/acme-sh.acme${ECC}/acme-sh.acme.cer
    - name: "[HTTP-01] prev. step failed ... collecting details"
      working-directory: examples/Docker/
      if: ${{ failure() }}
      run: |
        if ([ "${{ matrix.keylength }}" == "ec-256" ] || [ "${{ matrix.keylength }}" == "ec-384" ] || [ "${{ matrix.keylength }}" == "ec-521" ]) ; then
          ECC="_ecc"
        fi
        docker logs acme-sh
        docker-compose logs
        echo "acme issued cert..."
        openssl x509 -text -in acme-sh/acme-sh.acme${ECC}/acme-sh.acme.cer
        echo "acme sub-ca-cert"
        openssl x509 -text -in examples/Docker/data/acme_ca/sub-ca-cert.pem
        echo "acme root-ca"
        openssl x509 -text -in examples/Docker/data/acme_ca/sub-ca-cert.pem
    - name: "[HTTP-01] revoke cert multiple DNS with key: ${{ matrix.keylength }} - acc. key: ${{ matrix.accountkeylength }}"
      run: |
        if ([ "${{ matrix.keylength }}" == "ec-256" ] || [ "${{ matrix.keylength }}" == "ec-384" ] || [ "${{ matrix.keylength }}" == "ec-521" ]) ; then
          ECC="--ecc"
        fi
        docker exec -i acme-sh acme.sh --server http://acme-srv --revoke ${ECC} -d acme-sh.acme -d acme.sh --standalone --debug 2 --output-insecure
    - name: "[HTTP-01] prev. step failed ... collecting details"
      working-directory: examples/Docker/
      if: ${{ failure() }}
      run: |
        if ([ "${{ matrix.keylength }}" == "ec-256" ] || [ "${{ matrix.keylength }}" == "ec-384" ] || [ "${{ matrix.keylength }}" == "ec-521" ]) ; then
          ECC="_ecc"
        fi
        docker logs acme-sh
        docker-compose logs
        echo "acme issued cert..."
        openssl x509 -text -in acme-sh/acme-sh.acme${ECC}/acme-sh.acme.cer
        echo "acme sub-ca-cert"
        openssl x509 -text -in examples/Docker/data/acme_ca/sub-ca-cert.pem
        echo "acme root-ca"
        openssl x509 -text -in examples/Docker/data/acme_ca/sub-ca-cert.pem
    - name: "*[DNS-01] enroll cert single DNS with key: ${{ matrix.keylength }} - acc. key: ${{ matrix.accountkeylength }}"
      run: |
        #docker exec -i acme-sh acme.sh --server http://acme-srv --keylength ${{ matrix.keylength }} --test --issue --dns dns_acme2certifier --yes-I-know-dns-manual-mode-enough-go-ahead-please -d acme-sh.acme --standalone --debug 2 --output-insecure
        echo "testcase still to be created"
    - name: "[DNS-01] prev. step failed ... collecting details"
      working-directory: examples/Docker/
      if: ${{ failure() }}
      run: |
        if ([ "${{ matrix.keylength }}" == "ec-256" ] || [ "${{ matrix.keylength }}" == "ec-384" ] || [ "${{ matrix.keylength }}" == "ec-521" ]) ; then
          ECC="_ecc"
        fi
        docker logs acme-sh
        docker-compose logs
        cat .github/dnsserver_container/dnsmasq.new
    - name: "[DNS-01] revoke cert single DNS with key: ${{ matrix.keylength }} - acc. key: ${{ matrix.accountkeylength }}"
      run: |
        echo "testcase still to be created"
    - name: "[DNS-01] prev. step failed ... collecting details"
      working-directory: examples/Docker/
      if: ${{ failure() }}
      run: |
        if ([ "${{ matrix.keylength }}" == "ec-256" ] || [ "${{ matrix.keylength }}" == "ec-384" ] || [ "${{ matrix.keylength }}" == "ec-521" ]) ; then
          ECC="_ecc"
        fi
        docker logs acme-sh
        docker-compose logs
        echo "acme issued cert..."
        openssl x509 -text -in acme-sh/acme-sh.acme${ECC}/acme-sh.acme.cer
        echo "acme sub-ca-cert"
        openssl x509 -text -in examples/Docker/data/acme_ca/sub-ca-cert.pem
        echo "acme root-ca"
        openssl x509 -text -in examples/Docker/data/acme_ca/sub-ca-cert.pem
    - name: "*[DNS-01] enroll cert multiple DNS with key: ${{ matrix.keylength }} - acc. key: ${{ matrix.accountkeylength }}"
      run: |
        echo "testcase still to be created"
    - name: "[DNS-01] prev. step failed ... collecting details"
      working-directory: examples/Docker/
      if: ${{ failure() }}
      run: |
        if ([ "${{ matrix.keylength }}" == "ec-256" ] || [ "${{ matrix.keylength }}" == "ec-384" ] || [ "${{ matrix.keylength }}" == "ec-521" ]) ; then
          ECC="_ecc"
        fi
        docker logs acme-sh
        docker-compose logs
        echo "acme issued cert..."
        openssl x509 -text -in acme-sh/acme-sh.acme${ECC}/acme-sh.acme.cer
        echo "acme sub-ca-cert"
        openssl x509 -text -in examples/Docker/data/acme_ca/sub-ca-cert.pem
        echo "acme root-ca"
        openssl x509 -text -in examples/Docker/data/acme_ca/sub-ca-cert.pem
    - name: "*[DNS-01] revoke cert multiple DNS with key: ${{ matrix.keylength }} - acc. key: ${{ matrix.accountkeylength }}"
      run: |
        echo "testcase still to be created"
    - name: "[DNS-01] prev. step failed ... collecting details"
      working-directory: examples/Docker/
      if: ${{ failure() }}
      run: |
        if ([ "${{ matrix.keylength }}" == "ec-256" ] || [ "${{ matrix.keylength }}" == "ec-384" ] || [ "${{ matrix.keylength }}" == "ec-521" ]) ; then
          ECC="_ecc"
        fi
        docker logs acme-sh
        docker-compose logs
        echo "acme issued cert..."
        openssl x509 -text -in acme-sh/acme-sh.acme${ECC}/acme-sh.acme.cer
        echo "acme sub-ca-cert"
        openssl x509 -text -in examples/Docker/data/acme_ca/sub-ca-cert.pem
        echo "acme root-ca"
        openssl x509 -text -in examples/Docker/data/acme_ca/sub-ca-cert.pem
    - name: "deactivate account using acme.sh account key length: ${{ matrix.accountkeylength }}"
      run: |
        docker exec -i acme-sh acme.sh --server http://acme-srv --deactivate-account --debug 2 --output-insecure
    - name: "prev. step failed ... collecting details"
      working-directory: examples/Docker/
      if: ${{ failure() }}
      run: |
        docker logs acme-sh
        docker-compose logs
  certbot:
    name: "certbot"
    needs: [docker-compose_wsgi]
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        accountkeylength: [2048]
        keylength: [2048, 3072, 4096]
    steps:
    - name: "checkout GIT"
      uses: actions/checkout@v2
    - name: "[ PREPARE ] Build docker-compose (wsgi)"
      working-directory: examples/Docker/
      run: |
        sed -i "s/master/${GITHUB_REF##*/}/g" .env
        sed -i "s/grindsa/${{ github.repository_owner }}/g" ./wsgi/Dockerfile
        docker network create acme
        docker-compose up -d
        docker-compose logs
    - name: "[ PREPARE ] setup openssl ca_handler"
      run: |
        sudo cp examples/ca_handler/openssl_ca_handler.py examples/Docker/data/ca_handler.py
        sudo mkdir -p examples/Docker/data/acme_ca/certs
        sudo cp test/ca/sub-ca-key.pem test/ca/sub-ca-crl.pem test/ca/sub-ca-cert.pem test/ca/root-ca-cert.pem examples/Docker/data/acme_ca/
        sudo cp .github/openssl_ca_handler.py_acme_srv.cfg examples/Docker/data/acme_srv.cfg
        cd examples/Docker/
        docker-compose restart
        docker-compose logs
    - name: "create letsencrypt folder"
      run: |
        mkdir letsencrypt
    - name: "register using certbot"
      run: |
        docker run -i --rm --name certbot --network acme -v $PWD/letsencrypt:/etc/letsencrypt/ certbot/certbot register --agree-tos -m 'certbot@example.com' --server http://acme-srv --no-eff-email
    - name: "prev. step failed ... collecting details"
      working-directory: examples/Docker/
      if: ${{ failure() }}
      run: |
        docker-compose logs
    - name: "[HTTP-01] enroll cert single DNS with key: ${{ matrix.keylength }}"
      run: |
        docker run -i --rm --name certbot --network acme -v $PWD/letsencrypt:/etc/letsencrypt/ certbot/certbot certonly --rsa-key-size ${{ matrix.keylength }} --server http://acme-srv --standalone --preferred-challenges http -d certbot.acme --cert-name certbot
        sudo openssl verify -CAfile examples/Docker/data/acme_ca/root-ca-cert.pem -untrusted examples/Docker/data/acme_ca/sub-ca-cert.pem letsencrypt/live/certbot/cert.pem
    - name: "[HTTP-01] prev. step failed ... collecting details"
      working-directory: examples/Docker/
      if: ${{ failure() }}
      run: |
        docker-compose logs
    - name: "[HTTP-01] revoke cert single DNS with key: ${{ matrix.keylength }}"
      run: |
        docker run -i --rm --name certbot --network acme -v $PWD/letsencrypt:/etc/letsencrypt/ certbot/certbot revoke --delete-after-revoke --server http://acme-srv  -d certbot.acme --cert-name certbot
    - name: "[HTTP-01] prev. step failed ... collecting details"
      working-directory: examples/Docker/
      if: ${{ failure() }}
      run: |
        docker-compose logs
